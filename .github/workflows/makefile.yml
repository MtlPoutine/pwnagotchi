name: Build and Release

on:
  push:
    tags:        
      - '*'           # Push events to every tag not containing /
                      # for complex tags like v3.0.0/beta, use **

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PWN_VERSION: 'unknown' # Default value for PWN_VERSION
    
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-docker-images: true
        root-reserve-mb: 40960

    - uses: actions/checkout@v4
    
    - name: Extract PWN_VERSION number
      run: echo "PWN_VERSION=$(cut -d"'" -f2 < pwnagotchi/_version.py)" >> $GITHUB_ENV
      # if: startsWith(github.ref, 'refs/tags/')
      # run: echo "PWN_VERSION=$(echo ${GITHUB_REF#refs/tags/v})" >> $GITHUB_ENV
      
    - name: Install qemu
      run: sudo apt-get update && sudo apt-get install -y qemu-user-static qemu-utils

    - name: Install packer-builder-arm plugin and move to builder folder
      run: |
          git clone --depth 1 https://github.com/mkaczanowski/packer-builder-arm
          cd packer-builder-arm
          go mod download
          go build
          mv packer-builder-arm ${{github.workspace}}/builder

    - name: Run make
      run: make

    - name: Run pishrink
      run: |
          wget https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh
          chmod +x pishrink.sh
          sudo ./pishrink.sh -Z -a -v -d /home/runner/work/pwnagotchi-rpi-bookworm*.img

    - uses: actions/upload-artifact@v4
      with:
        name: pwnagotchi-raspios-bookworm-${{ env.PWN_VERSION }}-arm64.img
        # the packer file outputs to ../../.. but we find the file in ../..?
        path: /home/runner/work/pwnagotchi-rpi-bookworm-${{ env.PWN_VERSION }}-arm64.img.xz

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: pwnagotchi-raspios-bookworm-${{ env.PWN_VERSION }}-arm64

### I see no benefits to separating them into two jobs or reusable workflows but leave this as an example
  # release:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: startsWith(github.ref, 'refs/tags/')
    
  #   steps:
  #   # - uses: actions/checkout@v3

  #   - name: Download Artifact
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: pwnagotchi-raspios-bookworm-arm64.img

  #   - name: Release
  #     uses: softprops/action-gh-release@v1
  #     with:
  #       files: pwnagotchi-raspios-bookworm-arm64.img
